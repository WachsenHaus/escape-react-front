[{"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\app.jsx":"1","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\service\\api.js":"2","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\reservation\\reservationDetail.jsx":"3","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\reservationSucceed.jsx":"4","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\theme.jsx":"5","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\reservation\\reservationTitle.jsx":"6","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeCard.jsx":"7","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\storeCard.jsx":"8","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\index.js":"9","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\footer\\footer.jsx":"10","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeData.js":"11","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\confirm.jsx":"12","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\utils\\regex.js":"13","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\storeIntro.jsx":"14","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\nav\\nav.jsx":"15","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\info.jsx":"16","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\service\\kakaoMap.js":"17","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\intro.jsx":"18","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\data\\mapInfo.js":"19","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\header\\header.jsx":"20","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\caution\\caution.jsx":"21","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\review.jsx":"22","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\pagination\\pagination.jsx":"23","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeCards.jsx":"24","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\write\\reviewWrite.jsx":"25"},{"size":5811,"mtime":1611154356047,"results":"26","hashOfConfig":"27"},{"size":2656,"mtime":1611068639538,"results":"28","hashOfConfig":"27"},{"size":5594,"mtime":1610633324145,"results":"29","hashOfConfig":"27"},{"size":2265,"mtime":1610634373618,"results":"30","hashOfConfig":"27"},{"size":3834,"mtime":1610196144422,"results":"31","hashOfConfig":"27"},{"size":6512,"mtime":1610639225907,"results":"32","hashOfConfig":"27"},{"size":1231,"mtime":1610196187657,"results":"33","hashOfConfig":"27"},{"size":881,"mtime":1610078143618,"results":"34","hashOfConfig":"27"},{"size":219,"mtime":1611056805013,"results":"35","hashOfConfig":"27"},{"size":1550,"mtime":1609851137791,"results":"36","hashOfConfig":"27"},{"size":28352,"mtime":1610093927797,"results":"37","hashOfConfig":"27"},{"size":7917,"mtime":1610882793446,"results":"38","hashOfConfig":"27"},{"size":941,"mtime":1610626504697,"results":"39","hashOfConfig":"27"},{"size":1977,"mtime":1610076981433,"results":"40","hashOfConfig":"27"},{"size":2275,"mtime":1609819647050,"results":"41","hashOfConfig":"27"},{"size":11154,"mtime":1611040465249,"results":"42","hashOfConfig":"27"},{"size":82,"mtime":1610966832004,"results":"43","hashOfConfig":"27"},{"size":3739,"mtime":1609909344353,"results":"44","hashOfConfig":"27"},{"size":10468,"mtime":1610977239745,"results":"45","hashOfConfig":"27"},{"size":1875,"mtime":1609854800605,"results":"46","hashOfConfig":"27"},{"size":1820,"mtime":1609851327420,"results":"47","hashOfConfig":"27"},{"size":4420,"mtime":1611133552357,"results":"48","hashOfConfig":"27"},{"size":1089,"mtime":1611068595748,"results":"49","hashOfConfig":"27"},{"size":461,"mtime":1610196133576,"results":"50","hashOfConfig":"27"},{"size":6101,"mtime":1611157656169,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a1vm34",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"56"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\app.jsx",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\service\\api.js",[],["118","119"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\reservation\\reservationDetail.jsx",["120"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nconst EscapeReservationDetail = ({ EscapeApi }) => {\r\n  const historyState = useLocation().state;\r\n  const history = useHistory();\r\n\r\n  const [state, setState] = useState(\r\n    historyState && {\r\n      date: historyState.date,\r\n      time: historyState.time,\r\n      thema: historyState.thema,\r\n      branch: historyState.branch,\r\n      // }\r\n    }\r\n  );\r\n\r\n  const numberOfPeopleRef = useRef();\r\n  const costRef = useRef();\r\n  const nameRef = useRef();\r\n  const phoneRef = useRef();\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const uploadReservationState = () => {\r\n    const data = {\r\n      name: nameRef.current.value,\r\n      date: state.date,\r\n      time: state.time,\r\n      bname: state.branch,\r\n      thema: state.thema,\r\n      phone: phoneRef.current.value,\r\n      cost: costRef.current.value,\r\n      numberOfPeople: numberOfPeopleRef.current.value,\r\n    };\r\n    const setData = EscapeApi.setReservation(\r\n      data.name,\r\n      data.date,\r\n      data.time,\r\n      data.bname,\r\n      data.thema,\r\n      data.phone,\r\n      data.cost,\r\n      data.numberOfPeople\r\n    );\r\n\r\n    setData\r\n      .then((res) => {\r\n        if (!!!res) return;\r\n      })\r\n      .then(() => {\r\n        const goReservation = EscapeApi.getResNumber(\r\n          data.bname,\r\n          data.thema,\r\n          data.date,\r\n          data.time\r\n        );\r\n        goReservation.then((res) => {\r\n          if (!!!res) return;\r\n          if (res.status === 200) {\r\n            alert(\"예약되었습니다.\");\r\n            history.push({\r\n              pathname: \"/reservation-succeed\",\r\n              state: {\r\n                bname: data.bname,\r\n                thema: data.thema,\r\n                date: data.date,\r\n                time: data.time,\r\n                numberOfPeople: data.numberOfPeople,\r\n                cost: data.cost,\r\n                name: data.name,\r\n                phone: data.phone,\r\n                resNo: res.data.number,\r\n              },\r\n            });\r\n          } else if (res.status !== 200) {\r\n            alert(\"예약은 성공하였으나 조회에 실패하였습니다.\");\r\n          }\r\n        });\r\n      });\r\n  };\r\n  const costChange = () => {\r\n    if (numberOfPeopleRef.current) {\r\n      const count = numberOfPeopleRef.current.value;\r\n      switch (count) {\r\n        case \"2p\":\r\n          costRef.current.value = \"45,000원\";\r\n          break;\r\n        case \"3p\":\r\n          costRef.current.value = \"60,000원\";\r\n          break;\r\n        case \"4p\":\r\n          costRef.current.value = \"76,000원\";\r\n          break;\r\n        case \"5p\":\r\n          costRef.current.value = \"90,000원\";\r\n          break;\r\n        case \"6p\":\r\n          costRef.current.value = \"102,000원\";\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className=\"mb-5 mt-5\">\r\n        <h1 className=\"text-center\">정보입력</h1>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"date\">날짜</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value={`${state.date} ${state.time}`}\r\n              readOnly\r\n            />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"branch\">지점</label>\r\n            <input type=\"text\" className=\"form-control\" value={state.branch} readOnly />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"\">테마</label>\r\n            <input type=\"text\" className=\"form-control\" value={state.thema} readOnly />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"people\">인원선택</label>\r\n            <select\r\n              className=\"form-control\"\r\n              onChange={costChange}\r\n              ref={numberOfPeopleRef}\r\n              name=\"\"\r\n              id=\"\"\r\n            >\r\n              <option value=\"2p\">2명</option>\r\n              <option value=\"3p\">3명</option>\r\n              <option value=\"4p\">4명</option>\r\n              <option value=\"5p\">5명</option>\r\n              <option value=\"6p\">6명</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"cost\">금액</label>\r\n            <input\r\n              ref={costRef}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              value=\"45,000원\"\r\n              readOnly\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"resname\">예약자 성함</label>\r\n            <input ref={nameRef} type=\"text\" className=\"form-control\" />\r\n          </div>\r\n          <div className=\"col-6\">\r\n            <label htmlFor=\"\">연락처</label>\r\n            <input\r\n              ref={phoneRef}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placholeder=\" '-'없이 숫자만 입력해주세요.\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <button\r\n          style={{ \"margin-left\": \"45%\" }}\r\n          className=\"btn btn-outline-info\"\r\n          onClick={uploadReservationState}\r\n        >\r\n          온라인 예약하기\r\n        </button>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeReservationDetail;\r\n",["121","122"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\reservationSucceed.jsx",["123","124"],"import React, { useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styles from \"./reservationSucceed.module.css\";\r\nimport { useLocation } from \"react-router-dom\";\r\nconst EscapeReservationSucceed = (props) => {\r\n  const historyState = useLocation().state;\r\n\r\n  const [state, setState] = useState(\r\n    historyState && {\r\n      bname: historyState.bname,\r\n      thema: historyState.thema,\r\n      numberOfPeople: historyState.numberOfPeople,\r\n      date: historyState.date,\r\n      time: historyState.time,\r\n      cost: historyState.cost,\r\n      name: historyState.name,\r\n      phone: historyState.phone,\r\n      resNo: historyState.resNo,\r\n    }\r\n  );\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1>예약완료</h1>\r\n        <hr style={{ border: \"2px solid gray\" }} />\r\n        <div className=\"table1\">\r\n          <table className=\"table\">\r\n            <tr>\r\n              <th>지점</th>\r\n              <td>{state.bname}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>테마</th>\r\n              <td>{state.thema}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>예약일시</th>\r\n              <td>\r\n                {state.date} {state.time}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <th>인원</th>\r\n              <td>{state.numberOfPeople}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>참가요금</th>\r\n              <td>{state.cost}</td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n        <div className=\"table2\" style={{ \"margin-top\": \"5%\" }}>\r\n          <table className=\"table\">\r\n            <tr>\r\n              <th>예약자</th>\r\n              <td>{state.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>연락처</th>\r\n              <td>{state.phone}</td>\r\n            </tr>\r\n            <tr>\r\n              <th>예약확인번호</th>\r\n              <td>\r\n                {state.resNo}\r\n                <span style={{ \"margin-left\": \"5%\", \"color\": \"red\" }}>\r\n                  (예약확인 및 취소 때 필요한 정보 입니다.)\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </table>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeReservationSucceed;\r\n",["125","126"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\theme.jsx",[],["127","128"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\reservation\\reservationTitle.jsx",["129","130"],"import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport styles from \"./title.module.css\";\r\nimport { Button, Container, Table } from \"react-bootstrap\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\n\r\nconst EscapeReservationTitle = ({\r\n  state,\r\n  setBranch,\r\n  setDate,\r\n  setOwnedThemes,\r\n  EscapeApi,\r\n  timezoneDate,\r\n}) => {\r\n  const history = useHistory();\r\n  const selectedBranch = useRef();\r\n  const selectedTheme = useRef();\r\n  const selectedDate = useRef();\r\n  const [maxDay, setMaxDay] = useState();\r\n  const [minDay, setMinDay] = useState();\r\n  const [themaList, setThemaList] = useState();\r\n  //오늘로부터 2개월뒤까지만 달력에 표시함\r\n  const calcMaxDay = () => {\r\n    let today = new Date();\r\n    let yyyy = today.getFullYear();\r\n    let dd = today.getDate();\r\n    let mm = today.getMonth() + 2; //January is 0!\r\n\r\n    if (dd < 10) {\r\n      dd = \"0\" + dd;\r\n    }\r\n    if (mm < 10) {\r\n      mm = \"0\" + mm;\r\n    }\r\n    if (mm > 12) {\r\n      mm = mm % 12;\r\n      yyyy += 1;\r\n      if (mm < 10) {\r\n        mm = \"0\" + mm;\r\n      }\r\n    }\r\n    today = yyyy + \"-\" + mm + \"-\" + dd;\r\n    return today;\r\n  };\r\n\r\n  const getOwnedBranchSchedule = useCallback(() => {\r\n    const getData = EscapeApi.getReservation(\r\n      state.branch,\r\n      selectedTheme.current.value,\r\n      state.date\r\n    );\r\n    getData.then((res) => {\r\n      setThemaList(res.data.list);\r\n    });\r\n  }, [EscapeApi, state.branch, state.date]);\r\n\r\n  useEffect(() => {\r\n    if (!!!state.branch) {\r\n      setOwnedThemes(\"홍대점\");\r\n    }\r\n    getOwnedBranchSchedule();\r\n  }, [EscapeApi, getOwnedBranchSchedule, setOwnedThemes, state.branch, state.date]);\r\n\r\n  useEffect(() => {\r\n    setMinDay(timezoneDate.toISOString().split(\"T\")[0]);\r\n    setMaxDay(calcMaxDay());\r\n  }, []);\r\n\r\n  const onChangeBranch = () => {\r\n    selectedTheme.current.value = \"전체테마\";\r\n    setOwnedThemes(selectedBranch.current.value);\r\n  };\r\n  const onChangeDate = () => {\r\n    setDate(selectedDate.current.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1 className=\"text-center branch__tag\">{state.branch} 예약하기</h1>\r\n        <div className=\"form-group row\">\r\n          <div className=\"col-4\">\r\n            <label htmlFor=\"\">날짜선택</label>\r\n            <input\r\n              ref={selectedDate}\r\n              onChange={onChangeDate}\r\n              className=\"form-control\"\r\n              type=\"date\"\r\n              value={state.date}\r\n              min={minDay}\r\n              max={maxDay}\r\n            />\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label htmlFor=\"\">지점선택</label>\r\n            <select\r\n              onChange={onChangeBranch}\r\n              ref={selectedBranch}\r\n              value={state.branch}\r\n              name=\"\"\r\n              id=\"\"\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"홍대점\">홍대점</option>\r\n              <option value=\"대구점\">대구점</option>\r\n              <option value=\"인천구월점\">인천구월점</option>\r\n              <option value=\"전주점\">전주점</option>\r\n              <option value=\"잠실점\">잠실점</option>\r\n              <option value=\"대전둔산점\">대전둔산점</option>\r\n              <option value=\"천호점\">천호점</option>\r\n              <option value=\"수유점\">수유점</option>\r\n            </select>\r\n          </div>\r\n          <div className=\"col-4\">\r\n            <label htmlFor=\"\">테마</label>\r\n            <select\r\n              name=\"\"\r\n              ref={selectedTheme}\r\n              onChange={getOwnedBranchSchedule}\r\n              className=\"form-control\"\r\n            >\r\n              <option value={\"total\"}>전체테마</option>\r\n              {state.ownedThemes.map((item) => (\r\n                <option value={item.title}>\r\n                  {item.title} {item.level}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n          <Table striped className={`${styles.borderless} mt-3`} borderless>\r\n            <thead>\r\n              <tr className=\"row\">\r\n                <th className=\"col-3 text-center\">시간</th>\r\n                <th className=\"col-6 text-center\">테마</th>\r\n                <th className=\"col-3 text-center\">예약</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {themaList &&\r\n                themaList.map((item) => {\r\n                  return (\r\n                    <>\r\n                      <tr className=\"row\">\r\n                        <td className=\"col-3 text-center\">{item.time}</td>\r\n                        <td className=\"col-6 text-center\">{item.thema}</td>\r\n                        {item.state === \"매진\" && (\r\n                          <td className=\"col-3 text-center\">\r\n                            <span className=\"badge badge-danger\">{item.state}</span>\r\n                          </td>\r\n                        )}\r\n                        {item.state === \"예약진행중\" && (\r\n                          <td className=\"col-3 text-center\">\r\n                            <span className=\"badge badge-warning\">{item.state}</span>\r\n                          </td>\r\n                        )}\r\n                        {item.state === \"예약하기\" && (\r\n                          <td className=\"col-3 text-center\">\r\n                            <button\r\n                              className=\"badge badge-info\"\r\n                              onClick={() => {\r\n                                history.push({\r\n                                  pathname: \"/reservation-detail\",\r\n                                  state: {\r\n                                    date: state.date,\r\n                                    time: item.time,\r\n                                    thema: item.thema,\r\n                                    branch: state.branch,\r\n                                  },\r\n                                });\r\n                              }}\r\n                            >\r\n                              {item.state}\r\n                            </button>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    </>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <Button variant=\"primary\" style={{ \"margin-left\": \"85%\" }}>\r\n            예약취소\r\n          </Button>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeReservationTitle;\r\n","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeCard.jsx",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\storeCard.jsx",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\index.js",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\footer\\footer.jsx",["131","132"],"import React from \"react\";\r\n\r\nconst EscapeFooter = (props) => {\r\n  return (\r\n    <>\r\n      <footer className=\"bg-secondary\">\r\n        <div className=\"container py-5 \">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5\">\r\n              <h4>CUBE ESCPAE</h4>\r\n              <p className=\"m-0 mt-4 text-muted\">상호 : 주식회사 00이스케이프 000</p>\r\n              <p className=\"m-0 text-muted\">주소 : 서울시 마포구 00동 000-00 00빌딩4층</p>\r\n              <p className=\"m-0 text-muted\">전화 : 02-000-0000,0000</p>\r\n              <p className=\"m-0 text-muted\">이메일 : naver@naver.com</p>\r\n              <p className=\"m-0 text-muted\">사업자 : 000-00-00000</p>\r\n            </div>\r\n            <div className=\"col-md-5\">\r\n              <h4>CUSTOMER</h4>\r\n              <h2 className=\"text-warning\">02-9999-8888</h2>\r\n              <p className=\"m-0 mt-4 text-muted\">일~목:10:00부터 ~ 23:45까지</p>\r\n              <p className=\"m-0 text-muted\">\r\n                금/토/공휴일전날 10:00부터 ~ 익일 02:25까지\r\n              </p>\r\n            </div>\r\n            <div className=\"col-md-2\">\r\n              <h4>SNS</h4>\r\n              <a href=\"#\" className=\"mr-2\">\r\n                <img src=\"/escape/resources/img/sns01.jpg\" alt=\"\" />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img src=\"/escape/resources/img/sns02.jpg\" alt=\"\" />\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeFooter;\r\n","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeData.js",[],["133","134"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\confirm.jsx",["135"],"import React, { useCallback, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container, Spinner, Modal, Form, Table, Button } from \"react-bootstrap\";\r\nimport styles from \"./confirm.module.css\";\r\n\r\nconst EscapeConfirm = ({ EscapeApi, Regex }) => {\r\n  const history = useHistory();\r\n  const DID_NOT_TYPING = \"\";\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [inputState, setInputState] = useState({\r\n    name: DID_NOT_TYPING,\r\n    nameSucceed: DID_NOT_TYPING,\r\n    phone: DID_NOT_TYPING,\r\n    phoneSucceed: DID_NOT_TYPING,\r\n    checkNumber: DID_NOT_TYPING,\r\n    checkNumberSucceed: DID_NOT_TYPING,\r\n  });\r\n  const onCheck = () => {\r\n    if (\r\n      !(\r\n        inputState.checkNumberSucceed &&\r\n        inputState.nameSucceed &&\r\n        inputState.phoneSucceed\r\n      )\r\n    ) {\r\n      alert(\"값이 올바르지 않습니다.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const getData = EscapeApi.getReservationStat(\r\n      inputState.name,\r\n      inputState.phone,\r\n      inputState.checkNumber\r\n    );\r\n    if (getData === false) {\r\n      alert(\"서버 에러\");\r\n      return;\r\n    }\r\n    getData.then((res) => {\r\n      if (res.status !== 200) {\r\n        alert(`예약 확인 에러${res.status}`);\r\n        return;\r\n      }\r\n      //\r\n      //\r\n      setLoading(false);\r\n      const data = res.data.list[0];\r\n      history.push({\r\n        pathname: \"/reservation-succeed\",\r\n        state: {\r\n          bname: data.bname,\r\n          thema: data.thema,\r\n          numberOfPeople: data.personal,\r\n          date: data.resdate,\r\n          time: data.time,\r\n          cost: data.cost,\r\n          name: data.res_name,\r\n          phone: data.phone,\r\n          resNo: data.res_no,\r\n        },\r\n      });\r\n    });\r\n  };\r\n\r\n  const onDelete = () => {\r\n    if (\r\n      !(\r\n        inputState.checkNumberSucceed &&\r\n        inputState.nameSucceed &&\r\n        inputState.phoneSucceed\r\n      )\r\n    ) {\r\n      alert(\"값이 올바르지 않습니다.\");\r\n      return;\r\n    }\r\n    setLoading(true);\r\n    const getData = EscapeApi.deleteReservation(\r\n      inputState.name,\r\n      inputState.phone,\r\n      inputState.checkNumber\r\n    );\r\n    if (getData === false) {\r\n      alert(\"서버 에러\");\r\n      return;\r\n    }\r\n    getData.then((res) => {\r\n      setLoading(false);\r\n      if (res.status !== 200) {\r\n        alert(`삭제 에러${res.status}`);\r\n        return;\r\n      }\r\n      res.data.result === \"true\"\r\n        ? alert(\"예약이 취소되었습니다.\")\r\n        : alert(\"해당 예약이 존재하지 않습니다.\");\r\n    });\r\n  };\r\n\r\n  const onChange = useCallback((event) => {\r\n    let func;\r\n    if (event.target.name === \"name\") {\r\n      func = Regex.checkHangleName;\r\n    } else if (event.target.name === \"phone\") {\r\n      func = Regex.checkNonHipenPhoneNumber;\r\n    } else if (event.target.name === \"checkNumber\") {\r\n      func = Regex.checkDigitNumber;\r\n    }\r\n    if (event.target.value !== DID_NOT_TYPING) {\r\n      func(event.target) === false\r\n        ? setInputState((state) => {\r\n            const updated = { ...state };\r\n            updated[`${event.target.name}`] = event.target.value;\r\n            updated[`${event.target.name}Succeed`] = false;\r\n            return updated;\r\n          })\r\n        : setInputState((state) => {\r\n            const updated = { ...state };\r\n            updated[`${event.target.name}`] = event.target.value;\r\n            updated[`${event.target.name}Succeed`] = true;\r\n            return updated;\r\n          });\r\n    }\r\n    if (event.target.value === DID_NOT_TYPING) {\r\n      setInputState((state) => {\r\n        const updated = { ...state };\r\n        updated[`${event.target.name}`] = DID_NOT_TYPING;\r\n        updated[`${event.target.name}Succeed`] = DID_NOT_TYPING;\r\n        return updated;\r\n      });\r\n    }\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {loading && (\r\n          <Modal\r\n            centered={true}\r\n            dialogClassName={`${styles.center} modal-90w`}\r\n            contentClassName={styles.center}\r\n            show={true}\r\n          >\r\n            <Spinner animation=\"border\" />\r\n          </Modal>\r\n        )}\r\n        <Form action=\"\">\r\n          <br />\r\n          <br />\r\n          <h3>예약 확인 / 취소</h3>\r\n          <br />\r\n          <br />\r\n          <div className=\"row\">\r\n            <Table responsive hover className=\"text-center\">\r\n              <tbody>\r\n                <tr>\r\n                  <th className=\"text-center\">예약자</th>\r\n                  <td className=\"text-left\">\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name={\"name\"}\r\n                        onChange={onChange}\r\n                        placeholder=\"예약자 성함\"\r\n                        aria-label=\"Username\"\r\n                        isInvalid={\r\n                          inputState.name !== DID_NOT_TYPING\r\n                            ? !!!inputState.nameSucceed\r\n                            : \"\"\r\n                        }\r\n                        isValid={\r\n                          inputState.name !== DID_NOT_TYPING\r\n                            ? !!inputState.nameSucceed\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"text-center\">연락처</th>\r\n                  <td className=\"text-left\">\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name={\"phone\"}\r\n                        onChange={onChange}\r\n                        placeholder=\"연락처\"\r\n                        aria-label=\"UserPhone\"\r\n                        isInvalid={\r\n                          inputState.phone !== DID_NOT_TYPING\r\n                            ? !!!inputState.phoneSucceed\r\n                            : \"\"\r\n                        }\r\n                        isValid={\r\n                          inputState.phone !== DID_NOT_TYPING\r\n                            ? !!inputState.phoneSucceed\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"text-center\">예약확인번호</th>\r\n                  <td className=\"text-left\">\r\n                    <Form.Group>\r\n                      <Form.Control\r\n                        name={\"checkNumber\"}\r\n                        onChange={onChange}\r\n                        placeholder=\"예약확인번호\"\r\n                        aria-label=\"UserNumber\"\r\n                        isInvalid={\r\n                          inputState.checkNumber !== DID_NOT_TYPING\r\n                            ? !!!inputState.checkNumberSucceed\r\n                            : \"\"\r\n                        }\r\n                        isValid={\r\n                          inputState.checkNumber !== DID_NOT_TYPING\r\n                            ? !!inputState.checkNumberSucceed\r\n                            : \"\"\r\n                        }\r\n                      />\r\n                    </Form.Group>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n          <br />\r\n          <br />\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-12 col-md-12 text-center\">\r\n              <Button className=\"mx-2\" size=\"lg\" variant=\"primary\" onClick={onCheck}>\r\n                예약 확인\r\n              </Button>\r\n              <Button className=\"mx-2\" size=\"lg\" variant=\"danger\" onClick={onDelete}>\r\n                예약 취소\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeConfirm;\r\n",["136","137"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\utils\\regex.js",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\storeIntro.jsx",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\nav\\nav.jsx",["138","139","140"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\info.jsx",["141"],"/*global kakao*/\r\nimport React, { useEffect } from \"react\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport styles from \"./info.module.css\";\r\n\r\nconst EscapeInfo = ({ branchData, kakaoConfig, state, setBranch }) => {\r\n  const onClick = (event) => {\r\n    setBranch(event.target.innerText);\r\n  };\r\n\r\n  const selectedBranch = branchData[`${state.branch}`];\r\n  useEffect(() => {\r\n    const script = document.createElement(\"script\");\r\n    script.async = true;\r\n    script.src = `//dapi.kakao.com/v2/maps/sdk.js?appkey=${kakaoConfig.apiKey}&libraries=services&autoload=false`;\r\n\r\n    document.head.appendChild(script);\r\n    script.onload = () => {\r\n      kakao.maps &&\r\n        kakao.maps.load(() => {\r\n          let x = 37.553419;\r\n          let y = 126.920605;\r\n          switch (state.branch) {\r\n            case \"홍대점\":\r\n              x = 37.553419;\r\n              y = 126.920605;\r\n              break;\r\n            case \"대구점\":\r\n              x = 37.553419;\r\n              y = 126.920605;\r\n              break;\r\n            case \"인천구월점\":\r\n              x = 37.444135;\r\n              y = 126.702761;\r\n              break;\r\n            case \"전주점\":\r\n              x = 35.8156;\r\n              y = 127.110433;\r\n              break;\r\n            case \"잠실점\":\r\n              x = 37.51077;\r\n              y = 127.079955;\r\n              break;\r\n            case \"대전둔산점\":\r\n              x = 36.35069;\r\n              y = 127.374909;\r\n              break;\r\n            case \"천호점\":\r\n              x = 37.53862;\r\n              y = 127.127454;\r\n              break;\r\n            case \"수유점\":\r\n              x = 37.638344;\r\n              y = 127.02485;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          console.log(selectedBranch);\r\n          let context = `<div style=\"padding:5px;\">\r\n              <button id=\"closeBtn\" class=\"${styles.closeButton}\" >\r\n                x\r\n              </button>\r\n              <h1 class=\"mt-1\">\r\n                <span class=\"badge badge-info\">ACORN 이스케이프 ${state.branch}</span>\r\n              </h1>\r\n              <br/>\r\n                <img class=\"avatar\"  src=\"../resources/images/unnamed.png\" />\r\n              <br/>\r\n              <h5 class=\"text-center\" style=\"color:black;\">\r\n                지금 바로 탈출해 보세요!\r\n              </h5> \r\n            </div>`;\r\n\r\n          const container = document.getElementById(\"map\");\r\n          const options = {\r\n            center: new kakao.maps.LatLng(x, y),\r\n            draggable: false,\r\n            level: 3,\r\n          };\r\n          const map = new kakao.maps.Map(container, options);\r\n          map.setDraggable(true);\r\n          const zoomControl = new kakao.maps.ZoomControl();\r\n          map.addControl(zoomControl, kakao.maps.ControlPosition.RIGHT);\r\n          const markerPosition = new kakao.maps.LatLng(x, y);\r\n          const marker = new kakao.maps.Marker({\r\n            position: markerPosition,\r\n          });\r\n\r\n          marker.setMap(map);\r\n\r\n          const iwContent = context, // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\r\n            iwPosition = new kakao.maps.LatLng(x, y); //인포윈도우 표시 위치입니다\r\n\r\n          const infowindow = new kakao.maps.InfoWindow({\r\n            position: iwPosition,\r\n            content: iwContent,\r\n          });\r\n\r\n          infowindow.open(map, marker);\r\n          const closeBtn = document.querySelector(\"#closeBtn\");\r\n          closeBtn &&\r\n            closeBtn.addEventListener(\"click\", () => {\r\n              infowindow.close();\r\n            });\r\n        });\r\n    };\r\n  }, [state]);\r\n  return (\r\n    <>\r\n      <Container>\r\n        <h1 className=\"text-center\">오시는길</h1>\r\n        <div className={`${styles.branch}`}>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            홍대점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            대구점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            인천구월점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            전주점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            잠실점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            대전둔산점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            천호점\r\n          </p>\r\n          <p onClick={onClick} className={`text-success ${styles.link}`}>\r\n            수유점\r\n          </p>\r\n        </div>\r\n        <div className=\"row mt-5\">\r\n          <div className=\"col-sm-6 col-md-6 col-xs-12 circle_padding my-5\">\r\n            <div\r\n              id={\"map\"}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"500px\",\r\n              }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"col-sm-6 col-md-6 col-xs-12 my-5\">\r\n            <div>\r\n              <h4 style={{ color: \"red\" }}>{state.branch}</h4>\r\n\r\n              <Table responsive className={`${styles.borderless}`} borderless={true}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td>주소</td>\r\n                    <td>:</td>\r\n                    <td>{selectedBranch.주소}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>연락처</td>\r\n                    <td>:</td>\r\n                    <td>{selectedBranch.연락처}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>영업시간</td>\r\n                    <td>:</td>\r\n                    <td>\r\n                      {selectedBranch.영업시간[0] && selectedBranch.영업시간[0]}\r\n                      {selectedBranch.영업시간[1] && (\r\n                        <>\r\n                          <br></br>\r\n                          {selectedBranch.영업시간[1]}\r\n                        </>\r\n                      )}\r\n                      {selectedBranch.영업시간[2] && (\r\n                        <>\r\n                          <br></br>\r\n                          {selectedBranch.영업시간[2]}\r\n                        </>\r\n                      )}\r\n                      {selectedBranch.영업시간[3] && (\r\n                        <>\r\n                          <br></br>\r\n                          {selectedBranch.영업시간[3]}\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <div>\r\n              <h4>주변 지하철</h4>\r\n              <Table responsive className={`${styles.borderless}`} borderless={true}>\r\n                <tbody>\r\n                  <tr>\r\n                    {selectedBranch.지하철[0] && <>{selectedBranch.지하철[0]}</>}\r\n                    {selectedBranch.지하철[1] && (\r\n                      <>\r\n                        <br></br>\r\n                        {selectedBranch.지하철[1]}\r\n                      </>\r\n                    )}\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n            <div>\r\n              {selectedBranch.버스 && <h4>버스 정류장</h4>}\r\n              <Table responsive className={`${styles.borderless}`} borderless={true}>\r\n                <tbody>\r\n                  {selectedBranch.버스 &&\r\n                    selectedBranch.버스.map((item) => (\r\n                      <>\r\n                        <tr>\r\n                          <td>\r\n                            {item.정류장이름} : {item.정류장번호}\r\n                          </td>\r\n                          <td>\r\n                            {Object.keys(item).includes(\"간선\") ? (\r\n                              <>\r\n                                <span className=\"badge badge-info\">간선</span>\r\n                                {item[\"간선\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"지선\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-danger\">지선</span>\r\n                                {item[\"지선\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"급행\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-success\">급행</span>\r\n                                {item[\"급행\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"일반\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-success\">급행</span>\r\n                                {item[\"일반\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"공항\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-info\">공항</span>\r\n                                {item[\"공항\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"광역\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-warning\">광역</span>\r\n                                {item[\"광역\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                            {Object.keys(item).includes(\"좌석\") ? (\r\n                              <>\r\n                                <br></br>\r\n                                <span className=\"badge badge-info\">좌석</span>\r\n                                {item[\"좌석\"].join(\",\")}\r\n                              </>\r\n                            ) : (\r\n                              <></>\r\n                            )}\r\n                          </td>\r\n                        </tr>\r\n                      </>\r\n                    ))}\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeInfo;\r\n","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\service\\kakaoMap.js",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\intro\\intro.jsx",["142","143","144"],"import React, { useState } from \"react\";\r\nimport styles from \"./intro.module.css\";\r\nimport sub01_01 from \"../../images/sub01_01.jpg\";\r\nimport sub01_02 from \"../../images/sub01_02.jpg\";\r\nimport sub01_03 from \"../../images/sub01_03.jpg\";\r\nimport sub01_04 from \"../../images/sub01_04.jpg\";\r\n\r\nconst EscapeIntro = ({ card }) => {\r\n  const [data, setData] = useState({});\r\n\r\n  return (\r\n    <>\r\n      <main role=\"main\" className=\"bg-white\">\r\n        <section>\r\n          <div className=\"container pt-5\">\r\n            <h4 className=\"text-center text-primary\">도전하세요!</h4>\r\n            <h4 className=\"text-center text-primary\">\r\n              당신의 상상력,판단력,추리 능력으로...\r\n            </h4>\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-lg-3 col-md-6 px-5\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <img src={`${sub01_01}`} alt=\"\" />\r\n                  <span className=\"text-muted mt-5\">예약방법</span>\r\n                  <hr className=\"w-25 solid\" />\r\n                </div>\r\n                <p className=\"text-muted\">\r\n                  예약은 홈페이지, 매장전화를 이용 예약을 하세요. 예약시간 최소10분전\r\n                  도착하셔야 정상이용이 가능하며 5분 이상 늦으시면 예약은 자동 취소\r\n                  됩니다.\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 px-5\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <img src={`${sub01_02}`} alt=\"\" />\r\n                  <span className=\"text-muted mt-5\">진행방법</span>\r\n                  <hr className=\"w-25 solid\" />\r\n                </div>\r\n                <p className=\"text-muted\">\r\n                  입장전 휴대폰, 인화물질은 별도로 보관하며 게임의 몰입도를 위해 눈을\r\n                  가리고 입장합니다. 힌트는 총3번까지 요청하실 수 있습니다. 게임 진행\r\n                  시간은 총 60분 입니다.\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 px-5\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <img src={`${sub01_03}`} alt=\"\" />\r\n                  <span className=\"text-muted mt-5\">입장제한 및 환불 불가</span>\r\n                  <hr className=\"w-25 solid\" />\r\n                </div>\r\n                <p className=\"text-muted\">\r\n                  예약시간 이후 도착하시면 입장이 제한될 수 있습니다. 미성년자 이용불가\r\n                  테마가 있으니 테마소개에서 확인 바랍니다. 과도한 음주자, 폐쇄공포증,\r\n                  심장 질환자, 임산부는 이용하실 수 없습니다\r\n                </p>\r\n              </div>\r\n              <div className=\"col-lg-3 col-md-6 px-5\">\r\n                <div className=\"d-flex flex-column justify-content-center align-items-center\">\r\n                  <img src={`${sub01_04}`} alt=\"\" />\r\n                  <span className=\"text-muted mt-5\">기밀누설금지</span>\r\n                  <hr className=\"w-25 solid\" />\r\n                </div>\r\n                <p className=\"text-muted\">\r\n                  큐브 이스케이프의 모든 테마는 기밀입니다. 아직 테마를 경험하지 못하신\r\n                  분들을 위해 퀴즈에 대한 세부사항은 방문자만 공유바랍니다.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeIntro;\r\n",["145","146"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\data\\mapInfo.js",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\header\\header.jsx",["147","148","149"],"import React, { useState } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport main_img01 from \"../../images/main_img01.jpg\";\r\nimport main_img02 from \"../../images/main_img02.jpg\";\r\nimport main_img03 from \"../../images/main_img03.jpg\";\r\nimport styles from \"./header.module.css\";\r\nimport css from \"./header.css\";\r\nconst EscapeHeader = (props) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <main>\r\n        <Carousel className={`${styles.height}`}>\r\n          <Carousel.Item className=\"h-100\">\r\n            <img\r\n              className={`${styles.w_100} ${styles.h_100}`}\r\n              src={main_img01}\r\n              alt=\"1 slide\"\r\n            />\r\n            <Carousel.Caption className={styles.caption}>\r\n              <h1>주어진 시간은 단 60분!</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item className=\"h-100\">\r\n            <img\r\n              className={`${styles.w_100} ${styles.h_100}`}\r\n              src={main_img02}\r\n              alt=\"2 slide\"\r\n            />\r\n            <Carousel.Caption className={styles.caption}>\r\n              <h1>전국 최대 100평 규모의 미스터리 방탈출 카페</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n          <Carousel.Item className=\"h-100\">\r\n            <img\r\n              className={`${styles.w_100} ${styles.h_100}`}\r\n              src={main_img03}\r\n              alt=\"3 slide\"\r\n            />\r\n            <Carousel.Caption className={styles.caption}>\r\n              <h1>방안에 모든것이 단서다! 지금 이 순간! 큐브에 도전하세요!</h1>\r\n            </Carousel.Caption>\r\n          </Carousel.Item>\r\n        </Carousel>\r\n      </main>\r\n    </>\r\n  );\r\n};\r\nexport default EscapeHeader;\r\n","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\caution\\caution.jsx",[],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\pages\\review.jsx",["150","151"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\pagination\\pagination.jsx",["152"],"import React, { useEffect, useState } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nconst PaginationComponent = ({ getPage, pageInfo, setPageInfo }) => {\r\n  const [pages, setPages] = useState([]);\r\n\r\n  const onClickPage = (event) => {\r\n    if (pageInfo.pageNum === parseInt(event.target.innerText)) {\r\n      return;\r\n    }\r\n    getPage(event.target.innerText);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(pageInfo);\r\n    let active = pageInfo.pageNum;\r\n    const mItem = [];\r\n    for (let i = pageInfo.startPageNum; i <= pageInfo.endPageNum; i++) {\r\n      mItem.push(\r\n        <Pagination.Item key={i} active={i === active} onClick={onClickPage}>\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    console.log(mItem);\r\n    setPages([...mItem]);\r\n  }, [pageInfo]);\r\n\r\n  return (\r\n    <>\r\n      <Pagination>\r\n        {pageInfo.startPageNum !== 1 ? <Pagination.Prev /> : null}\r\n        {pages}\r\n        {pageInfo.endPageNum < pageInfo.totalPageCount ? <Pagination.Next /> : null}\r\n      </Pagination>\r\n    </>\r\n  );\r\n};\r\nexport default PaginationComponent;\r\n","C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\theme\\themeCards.jsx",["153","154","155"],"C:\\Users\\Younghoon\\Desktop\\work\\workspace\\react_escape_front\\src\\components\\write\\reviewWrite.jsx",["156","157","158","159"],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":8,"column":17,"nodeType":"166","messageId":"167","endLine":8,"endColumn":25},{"ruleId":"160","replacedBy":"168"},{"ruleId":"162","replacedBy":"169"},{"ruleId":"164","severity":1,"message":"170","line":3,"column":8,"nodeType":"166","messageId":"167","endLine":3,"endColumn":14},{"ruleId":"164","severity":1,"message":"165","line":8,"column":17,"nodeType":"166","messageId":"167","endLine":8,"endColumn":25},{"ruleId":"160","replacedBy":"171"},{"ruleId":"162","replacedBy":"172"},{"ruleId":"160","replacedBy":"173"},{"ruleId":"162","replacedBy":"174"},{"ruleId":"164","severity":1,"message":"175","line":4,"column":10,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"176","severity":1,"message":"177","line":66,"column":6,"nodeType":"178","endLine":66,"endColumn":8,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":27,"column":15,"nodeType":"182","endLine":27,"endColumn":44},{"ruleId":"180","severity":1,"message":"181","line":30,"column":15,"nodeType":"182","endLine":30,"endColumn":27},{"ruleId":"160","replacedBy":"183"},{"ruleId":"162","replacedBy":"184"},{"ruleId":"176","severity":1,"message":"185","line":99,"column":20,"nodeType":"166","endLine":99,"endColumn":31},{"ruleId":"160","replacedBy":"186"},{"ruleId":"162","replacedBy":"187"},{"ruleId":"164","severity":1,"message":"175","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"188","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":16},{"ruleId":"164","severity":1,"message":"189","line":3,"column":42,"nodeType":"166","messageId":"167","endLine":3,"endColumn":49},{"ruleId":"176","severity":1,"message":"190","line":108,"column":6,"nodeType":"178","endLine":108,"endColumn":13,"suggestions":"191"},{"ruleId":"164","severity":1,"message":"170","line":2,"column":8,"nodeType":"166","messageId":"167","endLine":2,"endColumn":14},{"ruleId":"164","severity":1,"message":"192","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":14},{"ruleId":"164","severity":1,"message":"193","line":9,"column":16,"nodeType":"166","messageId":"167","endLine":9,"endColumn":23},{"ruleId":"160","replacedBy":"194"},{"ruleId":"162","replacedBy":"195"},{"ruleId":"164","severity":1,"message":"196","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":11},{"ruleId":"164","severity":1,"message":"197","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":15},{"ruleId":"164","severity":1,"message":"198","line":11,"column":9,"nodeType":"166","messageId":"167","endLine":11,"endColumn":21},{"ruleId":"164","severity":1,"message":"199","line":5,"column":28,"nodeType":"166","messageId":"167","endLine":5,"endColumn":39},{"ruleId":"164","severity":1,"message":"200","line":10,"column":9,"nodeType":"166","messageId":"167","endLine":10,"endColumn":16},{"ruleId":"176","severity":1,"message":"201","line":27,"column":6,"nodeType":"178","endLine":27,"endColumn":16,"suggestions":"202"},{"ruleId":"164","severity":1,"message":"203","line":1,"column":17,"nodeType":"166","messageId":"167","endLine":1,"endColumn":23},{"ruleId":"164","severity":1,"message":"188","line":2,"column":10,"nodeType":"166","messageId":"167","endLine":2,"endColumn":16},{"ruleId":"164","severity":1,"message":"170","line":4,"column":8,"nodeType":"166","messageId":"167","endLine":4,"endColumn":14},{"ruleId":"164","severity":1,"message":"204","line":2,"column":21,"nodeType":"166","messageId":"167","endLine":2,"endColumn":25},{"ruleId":"164","severity":1,"message":"205","line":3,"column":10,"nodeType":"166","messageId":"167","endLine":3,"endColumn":20},{"ruleId":"164","severity":1,"message":"206","line":7,"column":8,"nodeType":"166","messageId":"167","endLine":7,"endColumn":23},{"ruleId":"164","severity":1,"message":"170","line":8,"column":8,"nodeType":"166","messageId":"167","endLine":8,"endColumn":14},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'setState' is assigned a value but never used.","Identifier","unusedVar",["207"],["208"],"'styles' is defined but never used.",["207"],["208"],["207"],["208"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timezoneDate'. Either include it or remove the dependency array. If 'setMinDay' needs the current value of 'timezoneDate', you can also switch to useReducer instead of useState and read 'timezoneDate' in the reducer.","ArrayExpression",["209"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["207"],["208"],"React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?",["207"],["208"],"'Button' is defined but never used.","'NavItem' is defined but never used.","React Hook useEffect has missing dependencies: 'kakaoConfig.apiKey' and 'selectedBranch'. Either include them or remove the dependency array.",["210"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["207"],["208"],"'css' is defined but never used.","'index' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'useLocation' is defined but never used.","'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onClickPage'. Either include it or remove the dependency array.",["211"],"'useRef' is defined but never used.","'Form' is defined but never used.","'useHistory' is defined but never used.","'styles_ckeditor' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"212","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [timezoneDate]",{"range":"218","text":"219"},"Update the dependencies array to be: [kakaoConfig.apiKey, selectedBranch, state]",{"range":"220","text":"221"},"Update the dependencies array to be: [onClickPage, pageInfo]",{"range":"222","text":"223"},[1756,1758],"[timezoneDate]",[3542,3549],"[kakaoConfig.apiKey, selectedBranch, state]",[785,795],"[onClickPage, pageInfo]"]